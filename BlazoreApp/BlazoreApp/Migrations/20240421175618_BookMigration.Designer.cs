// <auto-generated />
using BlazoreApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazoreApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240421175618_BookMigration")]
    partial class BookMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Assignment6.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GenreIs")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreIs = "Sci-Fi"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreIs = "Cartoon"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreIs = "Historical Fiction"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreIs = "Creepy"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreIs = "Childrens"
                        });
                });

            modelBuilder.Entity("BlazoreApp.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ISBN")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookId");

                    b.HasIndex("GenreId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookAmount = 0,
                            GenreId = 2,
                            ISBN = 9780006479888L,
                            Title = "A Song of Ice and Fire",
                            UserId = 1
                        },
                        new
                        {
                            BookId = 2,
                            BookAmount = 0,
                            GenreId = 1,
                            ISBN = 9780590353403L,
                            Title = "Harry Potter and the Sorcerer's Stone",
                            UserId = 2
                        },
                        new
                        {
                            BookId = 3,
                            BookAmount = 0,
                            GenreId = 3,
                            ISBN = 9780060512804L,
                            Title = "Cryptonomicon",
                            UserId = 3
                        },
                        new
                        {
                            BookId = 4,
                            BookAmount = 0,
                            GenreId = 4,
                            ISBN = 9781501156700L,
                            Title = "Pet Sematary",
                            UserId = 4
                        },
                        new
                        {
                            BookId = 5,
                            BookAmount = 0,
                            GenreId = 5,
                            ISBN = 9780142410318L,
                            Title = "Charlie and the Chocolate Factory",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("BlazoreApp.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoneyAmount")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            MoneyAmount = 1000,
                            UserName = "Gabe"
                        },
                        new
                        {
                            UserId = 2,
                            MoneyAmount = 20000,
                            UserName = "Mikayla"
                        });
                });

            modelBuilder.Entity("BlazoreApp.Entities.Book", b =>
                {
                    b.HasOne("Assignment6.Entities.Genre", null)
                        .WithOne("book")
                        .HasForeignKey("BlazoreApp.Entities.Book", "GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazoreApp.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Assignment6.Entities.Genre", b =>
                {
                    b.Navigation("book")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
